(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{342:function(t,a,s){"use strict";s.r(a);var e=s(8),r=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[t._v("#")]),t._v(" 安装")]),t._v(" "),a("h3",{attrs:{id:"rabbitmq安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rabbitmq安装"}},[t._v("#")]),t._v(" RabbitMQ安装")]),t._v(" "),a("p",[t._v("官网下载地址：https://www.rabbitmq.com/download.html")]),t._v(" "),a("p",[t._v("需要下载两个包")]),t._v(" "),a("blockquote",[a("p",[t._v("rabbitmq-server-3.8.8-1.el7.noarch.rpm")]),t._v(" "),a("p",[t._v("erlang-21.3.8.21-1.el7.x86_64.rpm")])]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 1.安装")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("rpm")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-ivh")]),t._v(" erlang-21.3.8.21-1.el7.x86_64.rpm\nyum "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" socat "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-y")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("rpm")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-ivh")]),t._v(" rabbitmq-server-3.8.8-1.el7.noarch.rpm\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 2.启动")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 启动服务")]),t._v("\nsystemctl start rabbitmq-server\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看服务状态")]),t._v("\nsystemctl status rabbitmq-server\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 开机自启动")]),t._v("\nsystemctl "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("enable")]),t._v(" rabbitmq-server\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 停止服务")]),t._v("\nsystemctl stop rabbitmq-server\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 重启服务")]),t._v("\nsystemctl restart rabbitmq-server\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 3.开放端口")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 如果防火墙是关闭状态需要开放 15672 和 5672 端口")]),t._v("\nfirewall-cmd --list-ports\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 添加")]),t._v("\nfirewall-cmd --add-port"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("15672")]),t._v("/tcp "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--permanent")]),t._v("\nfirewall-cmd --add-port"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5672")]),t._v("/tcp "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--permanent")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 载入")]),t._v("\nfirewall-cmd "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--reload")]),t._v("\n")])])]),a("h3",{attrs:{id:"web管理界面安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#web管理界面安装"}},[t._v("#")]),t._v(" Web管理界面安装")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("rabbitmq-plugins "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("enable")]),t._v(" rabbitmq_management\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 安装完成重启")]),t._v("\nsystemctl restart rabbitmq-server\n")])])]),a("h3",{attrs:{id:"登录"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#登录"}},[t._v("#")]),t._v(" 登录")]),t._v(" "),a("p",[t._v("http://ip:15672 ,用默认账号密码(guest)登录，提示"),a("strong",[t._v("User can only log in via localhost")]),t._v(",默认情况只能在 localhost 本机下访问,需要添加一个远程登录的用户")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建账号和密码")]),t._v("\nrabbitmqctl add_user admin "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("123456")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置用户角色")]),t._v("\nrabbitmqctl set_user_tags admin administrator\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 为用户添加资源权限 set_permissions [-p <vhostpath>] <user> <conf> <write> <read>")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 为admin添加配置、写、读权限")]),t._v("\nrabbitmqctl set_permissions "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-p")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/"')]),t._v(" admin "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('".*"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('".*"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('".*"')]),t._v("\n")])])]),a("p",[a("strong",[t._v("用户级别：")])]),t._v(" "),a("ol",[a("li",[a("strong",[t._v("administrator")]),t._v("：可以登录控制台、查看所有信息、可以对 rabbitmq 进行管理")]),t._v(" "),a("li",[a("strong",[t._v("monitoring")]),t._v("：监控者 登录控制台，查看所有信息")]),t._v(" "),a("li",[a("strong",[t._v("policymaker")]),t._v("：策略制定者 登录控制台，指定策略")]),t._v(" "),a("li",[a("strong",[t._v("managment")]),t._v("：普通管理员 登录控制台")])]),t._v(" "),a("h3",{attrs:{id:"命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#命令"}},[t._v("#")]),t._v(" 命令")]),t._v(" "),a("p",[a("strong",[t._v("1.启动RabbitMQ和Erlang")])]),t._v(" "),a("p",[t._v("rabbitmq-server -detached")]),t._v(" "),a("p",[t._v("该命令会同时启动rabbit应用程序和Erlang节点，如果MQ相关插件是开启状态")]),t._v(" "),a("p",[a("strong",[t._v("2.停止RabbitMQ和Erlang")])]),t._v(" "),a("p",[t._v("rabbitmqctl stop")]),t._v(" "),a("p",[t._v("用于停止RabbitMQ的Erlang虚拟机和RabbitMQ服务应用")]),t._v(" "),a("p",[t._v("当使用该命令停止节点后，就必须使用rabbitmq-server -detached才能将我们的节点启动起来")]),t._v(" "),a("p",[a("strong",[t._v("3.停止RabbitMQ应用")])]),t._v(" "),a("p",[t._v("rabbitmqctl stop_app")]),t._v(" "),a("p",[t._v("停止rabbitmq服务应用，但是erlang虚拟机还是处于运行状态的")]),t._v(" "),a("p",[a("strong",[t._v("4.启动RabbitMQ应用")])]),t._v(" "),a("p",[t._v("rabbitmqctl start_app")]),t._v(" "),a("p",[t._v("所以该命令在使用rabbitmqctl stop_app时可以使用")]),t._v(" "),a("p",[a("strong",[t._v("5.重置应用")])]),t._v(" "),a("p",[t._v("注：改命令需要在rabbitmqctl stop_app之后使用")]),t._v(" "),a("p",[t._v("rabbitmqctl reset")]),t._v(" "),a("p",[t._v("该命令会将rabbit节点重置还原到最初状态，包括从原来所在集群删除此节点，包括其所有配置数据(用户、vhost等)")]),t._v(" "),a("p",[a("strong",[t._v("6.查看vhost列表")])]),t._v(" "),a("p",[t._v("rabbitmqctl list_vhosts")]),t._v(" "),a("p",[a("strong",[t._v("7.查看节点状态")])]),t._v(" "),a("p",[t._v("rabbitmqctl status")]),t._v(" "),a("p",[a("strong",[t._v("8.查看插件")])]),t._v(" "),a("p",[t._v("rabbitmq-plugins list")]),t._v(" "),a("p",[a("strong",[t._v("9.开启rabbitmq web页面插件功能")])]),t._v(" "),a("p",[t._v("rabbitmq-plugins enable rabbitmq_management")]),t._v(" "),a("p",[a("strong",[t._v("10.关闭rabbitmq web页面插件*"),a("em",[t._v("功能*")])])]),t._v(" "),a("p",[t._v("rabbitmq-plugins disable rabbitmq_management")]),t._v(" "),a("p",[a("strong",[t._v("11.查看所有队列信息")])]),t._v(" "),a("p",[t._v("rabbitmqctl list_queues")]),t._v(" "),a("p",[a("strong",[t._v("12.清除某个队列里的消息")])]),t._v(" "),a("p",[t._v("rabbitmqctl -p [vhostpath] purge_queue [queue_name]")]),t._v(" "),a("p",[a("strong",[t._v("13.删除队列")])]),t._v(" "),a("p",[t._v("rabbitmqctl -p [vhostpath] delete_queue [queue_name]")]),t._v(" "),a("h2",{attrs:{id:"概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#概念"}},[t._v("#")]),t._v(" 概念")]),t._v(" "),a("p",[t._v("MQ（Message Queue）消息队列，是基础数据结构中“先进先出”的一种数据结构。一般用来解决"),a("strong",[t._v("应用解耦，消息分发，流量削峰")]),t._v("等问题，实现高性能，高可用，可伸缩和最终一致性架构。")]),t._v(" "),a("h3",{attrs:{id:"常见中间件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常见中间件"}},[t._v("#")]),t._v(" 常见中间件")]),t._v(" "),a("img",{staticStyle:{zoom:"80%","margin-left":"100px"},attrs:{src:"https://img.picgo.net/2024/06/11/middleware9e96fa406b556685.png",alt:"常见中间件"}}),t._v(" "),a("h3",{attrs:{id:"应用场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#应用场景"}},[t._v("#")]),t._v(" 应用场景")]),t._v(" "),a("ul",[a("li",[t._v("**异步解耦:**如果在进行一系列操作时其中某几步不需要同步进行可以选择发送消息给MQ进行异步操作")])]),t._v(" "),a("img",{staticStyle:{zoom:"50%","margin-left":"200px"},attrs:{src:"https://img.picgo.net/2024/06/11/asynchronousdecoupl3cbc4f9cd5141c5a.png",alt:"异步解耦"}}),t._v(" "),a("ul",[a("li",[t._v("**削峰填谷:**如果某一刻访问量急速增加可能会导致系统崩溃，此时可以选择发送消息给MQ进行处理")])]),t._v(" "),a("img",{staticStyle:{zoom:"50%","margin-left":"200px"},attrs:{src:"https://img.picgo.net/2024/06/11/peak_shaving_valley_fillc547d2b6171d9239.png"}}),t._v(" "),a("ul",[a("li",[t._v("**消息分发:**在实际开发中一个A系统的数据有的时候需要分发个不同的系统中，如果出现一个新的系统需要A系统数据那么则需要修改业务逻辑，此时可以选择将A系统消息数据发送给MQ，有需要的系统可以直接选择到MQ中获取，A系统则不需要关心消息分发给谁\n"),a("img",{staticStyle:{"margin-left":"100px",zoom:"80%"},attrs:{src:"https://img.picgo.net/2024/06/11/message_distribution2c079e38b4c67ef2.png",alt:"消息分发"}})])]),t._v(" "),a("h3",{attrs:{id:"使用劣势"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用劣势"}},[t._v("#")]),t._v(" 使用劣势")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("系统可用性降低")]),t._v("\n系统引用的外部依赖越多，系统的稳定性就会越差，如果MQ中途"),a("strong",[t._v("宕机")]),t._v("了则会对业务造成影响，需要"),a("strong",[t._v("保证MQ的高可用")])]),t._v(" "),a("li",[a("strong",[t._v("系统复杂度提高")]),t._v("\n之前是系统之间的调用现在则需要在中间由MQ进行调用，需要解决MQ的"),a("strong",[t._v("消息重复消费")]),t._v("问题，"),a("strong",[t._v("消息丢失")]),t._v("问题，"),a("strong",[t._v("消息传递的顺序性")]),t._v("问题")]),t._v(" "),a("li",[a("strong",[t._v("系统一致性问题")]),t._v("\nA系统通过MQ给BCD三个系统发送消息，如果BC成功D失败需要保证"),a("strong",[t._v("消息处理的一致性")])])]),t._v(" "),a("h3",{attrs:{id:"rabbitmq流程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rabbitmq流程"}},[t._v("#")]),t._v(" RabbitMQ流程")]),t._v(" "),a("p",[a("strong",[t._v("Broker")]),t._v("：接收和分发消息的应用，RabbitMQ Server就是 Message Broker")]),t._v(" "),a("p",[a("strong",[t._v("Virtual host")]),t._v("：出于多租户和安全因素设计的，把 AMQP 的基本组件划分到一个虚拟的分组中，类似于网 络中的 namespace 概念。当多个不同的用户使用同一个RabbitMQ server 提供的服务时，可以划分出多个vhost，每个用户在自己的 vhost 创建 exchange／queue 等")]),t._v(" "),a("p",[a("strong",[t._v("Connection")]),t._v("：publisher／consumer 和 broker 之间的 TCP 连接")]),t._v(" "),a("p",[a("strong",[t._v("Channel")]),t._v("：如果每一次访问 RabbitMQ 都建立一个 Connection，在消息量大的时候建立 TCP Connection 的开销将是巨大的，效率也较低。Channel 是在connection 内部建立的逻辑连接，如果应用程序支持多线 程，通常每个thread创建单独的 channel 进行通讯，AMQP method 包含了channel id 帮助客户端和 message broker 识别 channel，所以 channel 之间是完全隔离的。Channel 作为轻量级的 Connection 极大减少了操作系统建立 TCP connection 的开销。")]),t._v(" "),a("p",[a("strong",[t._v("Exchange")]),t._v("：message 到达 broker 的第一站，根据分发规则，匹配查询表中的 routing key，分发消息到 queue 中去。常用的类型有：direct (point-to-point), topic (publish-subscribe) and fanout (multicast)")]),t._v(" "),a("p",[a("strong",[t._v("Queue")]),t._v("：消息最终被送到这里等待 consumer 取走")]),t._v(" "),a("p",[a("strong",[t._v("Binding")]),t._v("：exchange 和 queue 之间的虚拟连接，binding 中可以包含 routing key。Binding 信息被保存 到 exchange 中的查询表中，用于 message 的分发依据")]),t._v(" "),a("img",{staticStyle:{zoom:"80%","margin-left":"100px"},attrs:{src:"https://img.picgo.net/2024/06/11/mq_flow_chart53db4b1da20529d1.jpg",alt:"流程图"}}),t._v(" "),a("h3",{attrs:{id:"工作模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#工作模式"}},[t._v("#")]),t._v(" 工作模式")]),t._v(" "),a("h4",{attrs:{id:"简单模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#简单模式"}},[t._v("#")]),t._v(" 简单模式")]),t._v(" "),a("p",[t._v("一个生产者，一个消费者，使用默认的交换机，适用于一对一的消息传递")]),t._v(" "),a("h4",{attrs:{id:"工作队列模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#工作队列模式"}},[t._v("#")]),t._v(" 工作队列模式")]),t._v(" "),a("p",[t._v("有一个或多个生产者将任务发布到队列中，而多个消费者从队列中获取任务并进行处理。每个任务只能被一个消费者处理，确保任务的唯一性和可靠性")]),t._v(" "),a("h4",{attrs:{id:"发布订阅模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#发布订阅模式"}},[t._v("#")]),t._v(" 发布订阅模式")]),t._v(" "),a("p",[t._v("有一个或多个生产者将消息发布到交换机（Exchange）中，而多个消费者通过绑定队列（Queue）到交换机上来接收消息。交换机负责将消息广播给所有绑定的队列，每个消费者都会收到一份消息副本。")]),t._v(" "),a("h4",{attrs:{id:"路由模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#路由模式"}},[t._v("#")]),t._v(" 路由模式")]),t._v(" "),a("p",[t._v("有一个或多个生产者将消息发布到交换机（Exchange）中，而交换机根据消息的路由键将消息发送到特定的队列。消费者通过绑定队列到交换机上来接收消息，只有与绑定时指定的路由键匹配的消息才会被消费者接收")]),t._v(" "),a("h4",{attrs:{id:"通配符模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#通配符模式"}},[t._v("#")]),t._v(" 通配符模式")]),t._v(" "),a("p",[t._v("生产者将消息发布到交换机（Exchange）中，并且消息的路由键（Routing Key）是一个字符串，可以包含通配符。交换机根据消息的路由键将消息发送到与之匹配的队列。消费者通过绑定队列到交换机上来接收消息，只有与绑定时指定的路由键匹配的消息才会被消费者接收。")]),t._v(" "),a("p",[t._v("在Topic模式中，路由键可以使用两种通配符：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("*")]),t._v("：匹配一个单词，例如"),a("code",[t._v("topic.*")]),t._v("可以匹配"),a("code",[t._v("topic.a")]),t._v("、"),a("code",[t._v("topic.b")]),t._v("等。")]),t._v(" "),a("li",[a("code",[t._v("#")]),t._v("：匹配零个或多个单词，例如"),a("code",[t._v("topic.#")]),t._v("可以匹配"),a("code",[t._v("topic.a")]),t._v("、"),a("code",[t._v("topic.a.b")]),t._v("、"),a("code",[t._v("topic.a.b.c")]),t._v("等。")])])])}),[],!1,null,null,null);a.default=r.exports}}]);